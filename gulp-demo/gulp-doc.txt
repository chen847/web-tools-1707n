Web tools
Day 01

1. grunt gulp、webpack、mocha、yeoman 都是 Node.js 的第三方模块，都是与 web 项目有关的工具模块
	1.1 检查 js 的语法错误
	1.2 合并和压缩 js 文件
	1.3 编译 css 预处理器文件
	1.4 其它的作用
		
2. gulp 的使用，官网：https://gulpjs.com/； 中文：https://www.gulpjs.com.cn/
3. 安装 gulp 为全局模块，任意目录 cmd：cnpm i -g gulp
4. 创建项目的配置文件：package.json，gulp-demo/ cmd: npm init
5. 安装 gulp 为项目的开发依赖，gulp-demo/ cmd: cnpm i --save-dev gulp
6. 创建 gulp 配置文件：gulp-demo/gulpfile.js
7. 引入 gulp: const gulp = require('gulp');
8. 定义一个 gulp 任务：
	gulp.task('default', () => {console.log('hi');}
9. 在 WebStorm 里打开命令行，快捷键是： Alt + F12，进入当前目录，执行命令：gulp + 回车
10. 安装 jshint 为项目的开发依赖，gulp-demo/ cmd:
cnpm i --save-dev jshint gulp-jshint
11. 引用 gulp-jshint：const jshint = require('gulp-jshint');
12. 定义任务一个 gulp 任务：
	12.1 gulp.task('hint', () => {});
	12.2 gulp-jshint 插件的作用是检查 js 文件的语法错误 
13. 在 default 任务中，声明执行这个 hint 任务：gulp.run('hint');
14. 安装 gulp-concat gulp-uglify gulp-rename 为项目的开发依赖，gulp-demo/ cmd: cnpm i --save-dev gulp-concat gulp-uglify gulp-rename
15. scripts 任务：
    gulp.src('./js/*.js') // 指定要处理的源文件
        .pipe(concat('all.js')) // 合并所有的 js 为 all.js
        .pipe(gulp.dest('./dist')) // 把 all.js 放到 /dist 目录中。dest：destination 目标、目的地；dist：distribution 发行、发布
        .pipe(rename('all.min.js')) // 把 all.js 改名为 all.min.js
        .pipe(uglify()) // 压缩 all.min.js
        .pipe(gulp.dest('./dist')); // 把 all.min.js 放到 /dist 目录中
16. 单独执行一个任务，cmd：gulp <任务名>
17. 安装 gulp-sass 项目的开发依赖，gulp-demo/ cmd: cnpm i --save-dev gulp-sass
18. 定义任务：sass
	gulp.src('./sass/*.sass') // 指定要处理的源文件
	    .pipe(sass()) // 编译 sass 文件为 css 文件
	    .pipe(gulp.dest('./css')); // 生成的 css 文件放入 css 目录中
19. gulp 的函数：
	19.1 gulp.task();
	19.2 gulp.run();
	19.3 gulp.src();
	19.4 gulp.dest();
	19.5 gulp.watch();


